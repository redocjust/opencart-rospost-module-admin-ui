module.exports = {
    env: {
        browser: true,
        es2020: true,
        es6: true,
        node: true,
    },
    extends: [
        'eslint:recommended', // Uses the recommended rules from @eslint
        'plugin:react/recommended', // Uses the recommended rules from @eslint-plugin-react
        'plugin:@typescript-eslint/recommended', // Uses the recommended rules from the @typescript-eslint/eslint-plugin
        'plugin:prettier/recommended', // Enables eslint-plugin-prettier and eslint-config-prettier. This will display prettier errors as ESLint errors. Make sure this is always the last configuration in the extends array.
        'prettier/@typescript-eslint', // Uses eslint-config-prettier to disable ESLint rules from @typescript-eslint/eslint-plugin that would conflict with prettier
    ],
    parser: '@typescript-eslint/parser', // Specifies the ESLint parser
    parserOptions: {
        //project: 'tsconfig.json',
        tsconfigRootDir: '.',
        ecmaFeatures: {
            jsx: true,
        },
        ecmaVersion: 12,
        sourceType: 'module',
    },
    plugins: ['@typescript-eslint', 'eslint-plugin-import-helpers', 'jsdoc', 'import', 'prettier', 'react', 'react-hooks','typescript-sort-keys'],
    rules: {
        '@typescript-eslint/explicit-function-return-type': 'off',
        '@typescript-eslint/explicit-module-boundary-types': 'off',
        '@typescript-eslint/interface-name-prefix': 'off',
        '@typescript-eslint/no-empty-function': 'off',
        '@typescript-eslint/no-empty-interface': 'off',
        '@typescript-eslint/no-unsafe-assignment': 'off',
        '@typescript-eslint/no-unsafe-member-access': 'off',
        '@typescript-eslint/no-unused-vars': [
            'error',
            {
                ignoreRestSiblings: true,
                argsIgnorePattern: '^_',
            }
        ],
        '@typescript-eslint/no-var-requires': 0,
        '@typescript-eslint/unbound-method': 'off',
        'array-bracket-spacing': 2,
        'array-callback-return': 2,
        'arrow-body-style': 2,
        'arrow-parens': 2,
        'comma-spacing': 2,
        'comma-style': 2,
        'default-param-last': 2,
        'eol-last': 2,
        'for-direction': 2,
        'func-call-spacing': 2,
        'import-helpers/order-imports': [
            'error',
            {
                alphabetize: {order: 'asc'},
                groups: ['/^[a-z].*$/', '/^@.*$/', 'module', ['parent', 'sibling', 'index']],
                newlinesBetween: 'never',
            },
        ],
        'jsdoc/check-alignment': 1,
        'jsdoc/check-param-names': 1,
        'jsdoc/check-property-names': 1,
        'jsdoc/require-description': 1,
        'jsdoc/require-description-complete-sentence': 2,
        // 'jsdoc/require-jsdoc': [
        //     'error',
        //     {
        //         contexts: [
        //             'TSInterfaceDeclaration', 'TSMethodSignature', 'TSEnumDeclaration'
        //         ]
        //     }
        // ],
        'jsdoc/require-param-description': 1,
        'jsdoc/require-param-name': 1,
        'jsdoc/require-property': 1,
        'jsdoc/require-property-description': 1,
        'jsdoc/require-property-name': 1,
        'jsdoc/require-returns-check': 1,
        'jsdoc/valid-types': 1,
        'jsx-quotes': 2,
        'keyword-spacing': 2,
        'newline-per-chained-call': 2,
        'no-array-constructor': 2,
        'no-case-declarations': 0,
        'no-constant-condition': 2,
        'no-debugger': 2,
        'no-dupe-args': 2,
        'no-dupe-keys': 2,
        'no-duplicate-imports': 2,
        'no-else-return': 2,
        'no-eq-null': 2,
        'no-eval': 2,
        'no-ex-assign': 2,
        'no-extra-boolean-cast': 0,
        'no-extra-semi': 2,
        'no-import-assign': 2,
        'no-inner-declarations': 2,
        'no-lone-blocks': 2,
        'no-loop-func': 2,
        'no-magic-numbers': [
            'warn',
            {
                detectObjects: true,
                enforceConst: true,
                ignore: [-1, 0, 1, 3, 5, 10, 30, 50, 100, 403, 1000, 1200, 992, 768, 1280],
                ignoreArrayIndexes: true,
            },
        ],
        'no-multi-assign': 2,
        'no-multi-spaces': 2,
        'no-multi-str': 2,
        'no-multiple-empty-lines': 2,
        'no-nested-ternary': 1,
        'no-new-func': 2,
        'no-new-object': 2,
        'no-prototype-builtins': 0,
        'no-redeclare': 2,
        'no-self-compare': 2,
        'no-sparse-arrays': 2,
        'no-template-curly-in-string': 2,
        'no-undef-init': 2,
        'no-unneeded-ternary': 2,
        'no-unreachable': 2,
        'no-unsafe-negation': 2,
        // @typescript-eslint/no-unused-vars: note you must disable the base rule as it can report incorrect errors
        'no-unused-vars': 'off',
        'no-useless-concat': 2,
        'no-whitespace-before-property': 2,
        'object-shorthand': 2,
        'prefer-arrow-callback': 2,
        'prefer-const': 1,
        'prefer-destructuring': 2,
        'prefer-rest-params': 2,
        'prefer-spread': 2,
        'react-hooks/rules-of-hooks': "error",
        'react-hooks/exhaustive-deps': "warn",
        'react/jsx-boolean-value': 2,
        'react/jsx-closing-bracket-location': 2,
        'react/jsx-curly-spacing': 2,
        'react/jsx-pascal-case': 2,
        'react/jsx-tag-spacing': 2,
        'react/jsx-wrap-multilines': 2,
        'react/no-multi-comp': 2,
        'react/prop-types': 0,
        'react/self-closing-comp': 2,
        'react/jsx-uses-react': 'off',
        'react/react-in-jsx-scope': 'off',
        'require-await': 2,
        'semi': 2,
        //'sort-keys': 2,
        'sort-vars': 2,
        'space-infix-ops': 2,
        'spaced-comment': 2,
        //'typescript-sort-keys/interface': 1,
        'typescript-sort-keys/string-enum': 2,
    },
    settings: {
        react: {
            version: 'detect', // Tells eslint-plugin-react to automatically detect the version of React to use
        },
    },
};
